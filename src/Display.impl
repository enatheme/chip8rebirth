template <class PROCESSOR>
void Options<PROCESSOR>::update()
{
    ImGui::Begin(m_title);
    if (ImGui::Button("Next instruction"))
    {
        m_processor.next_instruction();
    }
    ImGui::SameLine(150);
    ImGui::Checkbox("Print instruction", &m_print_instruction);
    if (m_print_instruction)
    {
        auto f = [](const char * text, size_t size)
        {
            ImGui::TextUnformatted(text, text + size);
            //std::cout << text << std::endl;
        };
        m_processor.display_current_instruction(f);
    }
    ImGui::End();
}

template <class PROCESSOR>
void Options<PROCESSOR>::clear()
{
}

template <class PROCESSOR>
void Registers<PROCESSOR>::update()
{
    ImGui::Begin(m_title);
    ImGui::Checkbox("Print registers in terminal", &m_print_in_terminal);
    auto f = [in_terminal = m_print_in_terminal](const char * text, size_t size)
    {
        if (!in_terminal)
        {
            ImGui::TextUnformatted(text, text + size);
        }
        else
        {
            std::cout << text << std::endl;
        }
    };
    m_processor.display_register(f);
    ImGui::End();
}
